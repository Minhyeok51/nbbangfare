[{"C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\index.js":"1","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\App.js":"2","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\component\\Header.js":"4","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\api\\requests.js":"5","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\component\\Footer.js":"6","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\component\\Login.js":"7","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\component\\Join.js":"8","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\component\\Post.js":"9","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\api\\axios.js":"10"},{"size":634,"mtime":1671592982973,"results":"11","hashOfConfig":"12"},{"size":1140,"mtime":1671516503330,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1671169647476,"results":"14","hashOfConfig":"12"},{"size":2864,"mtime":1671512751670,"results":"15","hashOfConfig":"12"},{"size":154,"mtime":1671600255111,"results":"16","hashOfConfig":"12"},{"size":504,"mtime":1671418126680,"results":"17","hashOfConfig":"12"},{"size":287,"mtime":1671421277639,"results":"18","hashOfConfig":"12"},{"size":8940,"mtime":1671609726275,"results":"19","hashOfConfig":"12"},{"size":3240,"mtime":1671529168803,"results":"20","hashOfConfig":"12"},{"size":136,"mtime":1671600176367,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"h97i1a",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\index.js",[],[],[],"C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\App.js",[],[],"C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\component\\Header.js",["56","57","58","59","60","61","62"],[],"import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faMagnifyingGlass} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../css/header.css\"\r\nimport {useNavigate } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    let navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n   \r\n    \r\n      <div className='container'>\r\n        <Container>\r\n          <Row className=\"header\">\r\n            <Col>\r\n              <h1>\r\n                <a onClick={()=>{navigate('/')}}>N빵빠레</a>\r\n              </h1>\r\n            </Col>\r\n            <Col xs={5}>\r\n              <form action=\"/\" method=\"get\">\r\n                <fieldset>\r\n                  <legend>\r\n                    <input type=\"text\" value=\"갖고 싶은 선물 찾기\" />\r\n                    <button type=\"submit\">\r\n                      <FontAwesomeIcon icon={faMagnifyingGlass} />\r\n                    </button>\r\n                  </legend>\r\n                </fieldset>\r\n              </form>\r\n            </Col>\r\n            <Col>\r\n              <ul style={{ listStyle: \"none\" }}>\r\n                <li>\r\n                  <a onClick={()=>{navigate('/mypage')}}>마이페이지</a>\r\n                </li>\r\n                <li>\r\n                  <a onClick={()=>{navigate('/join')}}>회원가입</a>\r\n                </li>\r\n                <li>\r\n                  <a onClick={()=>{navigate(\"/login\")}}>로그인</a>\r\n                </li>\r\n              </ul>\r\n            </Col>\r\n          </Row>\r\n          <div\r\n            style={{\r\n              background: \"rgb(30, 159, 243)\",\r\n              height: \"50px\",\r\n              paddingTop: \"10px\",\r\n              width: \"100vw\",\r\n              zIndex:\"100\"\r\n            }}\r\n          >\r\n            <Row>\r\n              <Col>\r\n                <ul className='dropDownMenu'>\r\n                  <li className='dropDown'>\r\n                    <a href=\"/product-list\">상품목록</a>\r\n                    <ul className='dropDownMenu'>\r\n                        <li><a href='hi'>무신사</a></li>\r\n                        <li><a>선물하기</a></li>\r\n                    </ul>\r\n                  </li>\r\n                  <li className='dropDown'>\r\n                    <a href=\"/wishlist\">찜목록</a>\r\n                    <ul className='dropDownMenu'>\r\n                        <li><a>무신사2</a></li>\r\n                        <li><a>선물하기2</a></li>\r\n                    </ul>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"/nbbangfare\">N빵빠레란?</a>\r\n                  </li>\r\n                </ul>\r\n              </Col>\r\n             \r\n            </Row>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n}\r\nexport default Header;","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\api\\requests.js",[],[],"C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\component\\Footer.js",[],[],"C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\component\\Login.js",[],[],"C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\component\\Join.js",["63","64","65","66","67","68","69","70","71","72","73","74","75","76","77"],[],"import axios from \"../api/axios\";\r\nimport {useState} from \"react\";\r\nimport '../css/join.css'\r\nimport Post from './Post';\r\nimport requests from '../api/requests'\r\nimport instance from \"../api/axios\";\r\n\r\n\r\nfunction Join(){\r\n  \r\nconst [popup, setPopup] = useState(false);\r\n// 초기값 세팅 - 아이디, 닉네임, 비밀번호, 비밀번호확인, 이메일, 전화번호, 생년월일, 주소\r\nconst [id, setId] = useState(\"\");\r\nconst [name, setName] = useState(\"\");\r\nconst [password, setPassword] = useState(\"\");\r\nconst [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\nconst [email, setEmail] = useState(\"\");\r\nconst [phone, setPhone] = useState(\"\");\r\nconst [birth, setBirth] = useState(\"\");\r\nconst [address, setAddress] = useState({address:'',});\r\n\r\n// 오류메세지 상태 저장\r\nconst [idMessage, setIdMessage] = useState(\"\");\r\nconst [nameMessage, setNameMessage] = useState(\"\");\r\nconst [passwordMessage, setPasswordMessage] = useState(\"\");\r\nconst [passwordConfirmMessage, setPasswordConfirmMessage] = useState(\"\");\r\nconst [emailMessage, setEmailMessage] = useState(\"\");\r\nconst [phoneMessage, setPhoneMessage] = useState(\"\");\r\nconst [birthMessage, setBirthMessage] = useState(\"\");\r\n\r\n// 유효성 검사\r\nconst [isId, setIsId] = useState(false);\r\nconst [isname, setIsName] = useState(false);\r\nconst [isPassword, setIsPassword] = useState(false);\r\nconst [isPasswordConfirm, setIsPasswordConfirm] = useState(false);\r\nconst [isEmail, setIsEmail] = useState(false);\r\nconst [isPhone, setIsPhone] = useState(false);\r\nconst [isBirth, setIsBirth] = useState(false);\r\n\r\nconst onChangeId = (e) => {\r\n  const currentId = e.target.value;\r\n  setId(currentId);\r\n  const idRegExp = /^[a-zA-z0-9]{4,12}$/;\r\n\r\n  if (!idRegExp.test(currentId)) {\r\n    setIdMessage(\"4-12사이 대소문자 또는 숫자만 입력해 주세요!\");\r\n    setIsId(false);\r\n  } else {\r\n    setIdMessage(\"사용가능한 아이디 입니다.\");\r\n    setIsId(true);\r\n  }\r\n};\r\n\r\nconst onChangeName = (e) => {\r\n  const currentName = e.target.value;\r\n  setName(currentName);\r\n\r\n  if (currentName.length < 2 || currentName.length > 5) {\r\n    setNameMessage(\"이름은 2글자 이상 5글자 이하로 입력해주세요!\");\r\n    setIsName(false);\r\n  } else {\r\n    // setNameMessage(\"사용가능한 닉네임 입니다.\");\r\n    setIsName(true);\r\n  }\r\n};\r\n\r\nconst onChangePassword = (e) => {\r\n  const currentPassword = e.target.value;\r\n  setPassword(currentPassword);\r\n  const passwordRegExp =\r\n    /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\r\n  if (!passwordRegExp.test(currentPassword)) {\r\n    setPasswordMessage(\r\n      \"숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요!\"\r\n    );\r\n    setIsPassword(false);\r\n  } else {\r\n    setPasswordMessage(\"안전한 비밀번호 입니다.\");\r\n    setIsPassword(true);\r\n  }\r\n};\r\nconst onChangePasswordConfirm = (e) => {\r\n  const currentPasswordConfirm = e.target.value;\r\n  setPasswordConfirm(currentPasswordConfirm);\r\n  if (password !== currentPasswordConfirm) {\r\n    setPasswordConfirmMessage(\"떼잉~ 비밀번호가 똑같지 않아요!\");\r\n    setIsPasswordConfirm(false);\r\n  } else {\r\n    setPasswordConfirmMessage(\"똑같은 비밀번호를 입력했습니다.\");\r\n    setIsPasswordConfirm(true);\r\n  }\r\n};\r\nconst onChangeEmail = (e) => {\r\n  const currentEmail = e.target.value;\r\n  setEmail(currentEmail);\r\n  const emailRegExp =\r\n    /^[A-Za-z0-9_]+[A-Za-z0-9]*[@]{1}[A-Za-z0-9]+[A-Za-z0-9]*[.]{1}[A-Za-z]{1,3}$/;\r\n\r\n  if (!emailRegExp.test(currentEmail)) {\r\n    setEmailMessage(\"이메일의 형식이 올바르지 않습니다!\");\r\n    setIsEmail(false);\r\n  } else {\r\n    setEmailMessage(\"사용 가능한 이메일 입니다.\");\r\n    setIsEmail(true);\r\n  }\r\n};\r\nconst onChangePhone = (getNumber) => {\r\n  const currentPhone = getNumber;\r\n  setPhone(currentPhone);\r\n  const phoneRegExp = /^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/;\r\n\r\n  if (!phoneRegExp.test(currentPhone)) {\r\n    setPhoneMessage(\"올바른 형식이 아닙니다!\");\r\n    setIsPhone(false);\r\n  } else {\r\n    setPhoneMessage(\"사용 가능한 번호입니다:-)\");\r\n    setIsPhone(true);\r\n  }\r\n};\r\n\r\nconst addHyphen = (e) => {\r\n  const currentNumber = e.target.value;\r\n  setPhone(currentNumber);\r\n  if (currentNumber.length == 3 || currentNumber.length == 8) {\r\n    setPhone(currentNumber + \"-\");\r\n    onChangePhone(currentNumber + \"-\");\r\n  } else {\r\n    onChangePhone(currentNumber);\r\n  }\r\n};\r\n\r\nconst onChangeBirth = (e) => {\r\n  const currentBirth = e.target.value;\r\n  setBirth(currentBirth);\r\n};\r\n\r\nconst handleSubmit = async (e) => {\r\n  if(password !== passwordConfirm){\r\n    alert('비밀번호가 달라요')\r\n    e.preventDefault();\r\n    return\r\n  }\r\n  e.preventDefault();\r\n  console.log(address)\r\n  \r\n  await axios\r\n      .post(requests.joinPath,null,{params: {\r\n          userId:id,\r\n          userPw:password,\r\n          userName:name,\r\n          userBirth:birth,\r\n          userPhoneNo:phone,\r\n          userEmail:email,\r\n          // userAdress:address\r\n      }})\r\n      .then((response) => {\r\n          console.log(response.data)\r\n      })\r\n      .catch((error) => {\r\n          console.log(error);\r\n      });\r\n}\r\n\r\n//주소검색\r\n\r\n\r\n\r\n\r\nconst handleInput = (e) => {\r\n\tsetAddress({\r\n    \t...address,\r\n        [e.target.name]:e.target.value,\r\n    })\r\n}\r\n\r\nconst handleComplete = (data) => {\r\n    setPopup(!popup);\r\n}\r\n    return (\r\n      <>\r\n        <h3>Sign Up</h3>\r\n        <form action=\"\" method=\"post\">\r\n          <div className=\"form\">\r\n            <div className=\"form-el\">\r\n              <label htmlFor=\"id\">Id</label> <br />\r\n              <input id=\"id\" name=\"id\" value={id} onChange={onChangeId} />\r\n              <p className=\"message\"> {idMessage} </p>\r\n            </div>\r\n\r\n            <div className=\"form-el\">\r\n              <label htmlFor=\"name\">Name</label> <br />\r\n              <input\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={onChangeName}\r\n              />\r\n              <p className=\"message\">{nameMessage}</p>\r\n            </div>\r\n            <div className=\"form-el\">\r\n              <label htmlFor=\"password\">Password</label> <br />\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={onChangePassword}\r\n              />\r\n              <p className=\"message\">{passwordMessage}</p>\r\n            </div>\r\n            <div className=\"form-el\">\r\n              <label htmlFor=\"passwordConfirm\">Password Confirm</label> <br />\r\n              <input\r\n                type=\"password\"\r\n                id=\"passwordConfirm\"\r\n                name=\"passwordConfirm\"\r\n                value={passwordConfirm}\r\n                onChange={onChangePasswordConfirm}\r\n              />\r\n              <p className=\"message\">{passwordConfirmMessage}</p>\r\n            </div>\r\n            <div className=\"form-el\">\r\n              <label htmlFor=\"email\">Email</label> <br />\r\n              <input\r\n                id=\"email\"\r\n                name=\"name\"\r\n                value={email}\r\n                onChange={onChangeEmail}\r\n              />\r\n              <p className=\"message\">{emailMessage}</p>\r\n            </div>\r\n            <div className=\"form-el\">\r\n              <label htmlFor=\"phone\">Phone</label> <br />\r\n              <input\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                value={phone}\r\n                onChange={addHyphen}\r\n              />\r\n              <p className=\"message\">{phoneMessage}</p>\r\n            </div>\r\n            <div className=\"form-el\">\r\n              <label htmlFor=\"birth\">Birth</label> <br />\r\n              <input\r\n                type=\"date\"\r\n                id=\"birth\"\r\n                name=\"birth\"\r\n                value={birth}\r\n                onChange={onChangeBirth}\r\n              />\r\n              <p className=\"message\">{birthMessage}</p>\r\n            </div>\r\n            {/* <div  className=\"form-el\">\r\n            <label htmlFor=\"birth\">Address</label> <br />\r\n            <input type=\"text\" id=\"postcode\" placeholder=\"우편번호\" />\r\n            <input\r\n              type=\"button\"\r\n              onClick={handleComplete}\r\n              onChange={handleInput}\r\n              value=\"우편번호 찾기\"\r\n            />\r\n            <br />\r\n            <input type=\"text\" id=\"address\" placeholder=\"주소\" />\r\n            <br />\r\n            <input type=\"text\" id=\"detailAddress\" placeholder=\"상세주소\" />\r\n            <input type=\"text\" id=\"extraAddress\" placeholder=\"참고항목\" />\r\n            </div> \r\n            {popup && <Post company={address} setcompany={setAddress}></Post>} */}\r\n            <br />\r\n            <br />\r\n            <button type=\"submit\" onClick={handleSubmit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n };\r\nexport default Join;","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\component\\Post.js",["78","79","80"],[],"import React, { useEffect, useState } from \"react\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport '../css/join.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    const complete = (data) =>{\r\n       // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n      \r\n\r\n                // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n                var addr = ''; // 주소 변수\r\n                var extraAddr = ''; // 참고항목 변수\r\n                \r\n                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n                    addr = data.roadAddress;\r\n                    \r\n                } else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n                    addr = data.jibunAddress;\r\n                    \r\n                }\r\n                \r\n                // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n                if(data.userSelectedType === 'R'){\r\n                    // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n                    // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n                    if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n                        extraAddr += data.bname;\r\n                    }\r\n                    // 건물명이 있고, 공동주택일 경우 추가한다.\r\n                    if(data.buildingName !== '' && data.apartment === 'Y'){\r\n                        extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n                    }\r\n                    // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n                    if(extraAddr !== ''){\r\n                        extraAddr = ' (' + extraAddr + ')';\r\n                    }\r\n                    // 조합된 참고항목을 해당 필드에 넣는다.\r\n                    document.getElementById(\"extraAddress\").value = extraAddr;\r\n                \r\n                } else {\r\n                    document.getElementById(\"extraAddress\").value = '';\r\n                }\r\n                \r\n                // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n                let postCode = document.getElementById('postcode').value = data.zonecode;\r\n                let addrs = document.getElementById(\"address\").value = addr;\r\n                // 커서를 상세주소 필드로 이동한다.\r\n                let detailAddr = document.getElementById(\"detailAddress\").focus();\r\n\r\n                props.setcompany({\r\n                    ...props.company,\r\n                    address:postCode+addrs,\r\n                })\r\n                \r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <DaumPostcode\r\n                className=\"postmodal\"\r\n                autoClose\r\n                onComplete={complete} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","C:\\Users\\User\\git\\nbbangfare\\nbbanfare\\src\\main\\frontend\\src\\api\\axios.js",[],[],{"ruleId":"81","severity":1,"message":"82","line":21,"column":17,"nodeType":"83","endLine":21,"endColumn":50},{"ruleId":"81","severity":1,"message":"82","line":39,"column":19,"nodeType":"83","endLine":39,"endColumn":58},{"ruleId":"81","severity":1,"message":"82","line":42,"column":19,"nodeType":"83","endLine":42,"endColumn":56},{"ruleId":"81","severity":1,"message":"82","line":45,"column":19,"nodeType":"83","endLine":45,"endColumn":57},{"ruleId":"81","severity":1,"message":"82","line":66,"column":29,"nodeType":"83","endLine":66,"endColumn":32},{"ruleId":"81","severity":1,"message":"82","line":72,"column":29,"nodeType":"83","endLine":72,"endColumn":32},{"ruleId":"81","severity":1,"message":"82","line":73,"column":29,"nodeType":"83","endLine":73,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":12},{"ruleId":"84","severity":1,"message":"88","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":16},{"ruleId":"84","severity":1,"message":"89","line":29,"column":22,"nodeType":"86","messageId":"87","endLine":29,"endColumn":37},{"ruleId":"84","severity":1,"message":"90","line":32,"column":8,"nodeType":"86","messageId":"87","endLine":32,"endColumn":12},{"ruleId":"84","severity":1,"message":"91","line":33,"column":8,"nodeType":"86","messageId":"87","endLine":33,"endColumn":14},{"ruleId":"84","severity":1,"message":"92","line":34,"column":8,"nodeType":"86","messageId":"87","endLine":34,"endColumn":18},{"ruleId":"84","severity":1,"message":"93","line":35,"column":8,"nodeType":"86","messageId":"87","endLine":35,"endColumn":25},{"ruleId":"84","severity":1,"message":"94","line":36,"column":8,"nodeType":"86","messageId":"87","endLine":36,"endColumn":15},{"ruleId":"84","severity":1,"message":"95","line":37,"column":8,"nodeType":"86","messageId":"87","endLine":37,"endColumn":15},{"ruleId":"84","severity":1,"message":"96","line":38,"column":8,"nodeType":"86","messageId":"87","endLine":38,"endColumn":15},{"ruleId":"84","severity":1,"message":"97","line":38,"column":17,"nodeType":"86","messageId":"87","endLine":38,"endColumn":27},{"ruleId":"98","severity":1,"message":"99","line":124,"column":28,"nodeType":"100","messageId":"101","endLine":124,"endColumn":30},{"ruleId":"98","severity":1,"message":"99","line":124,"column":57,"nodeType":"100","messageId":"101","endLine":124,"endColumn":59},{"ruleId":"84","severity":1,"message":"102","line":169,"column":7,"nodeType":"86","messageId":"87","endLine":169,"endColumn":18},{"ruleId":"84","severity":1,"message":"103","line":176,"column":7,"nodeType":"86","messageId":"87","endLine":176,"endColumn":21},{"ruleId":"84","severity":1,"message":"104","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"105","line":1,"column":28,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"106","line":51,"column":21,"nodeType":"86","messageId":"87","endLine":51,"endColumn":31},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Post' is defined but never used.","Identifier","unusedVar","'instance' is defined but never used.","'setBirthMessage' is assigned a value but never used.","'isId' is assigned a value but never used.","'isname' is assigned a value but never used.","'isPassword' is assigned a value but never used.","'isPasswordConfirm' is assigned a value but never used.","'isEmail' is assigned a value but never used.","'isPhone' is assigned a value but never used.","'isBirth' is assigned a value but never used.","'setIsBirth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleInput' is assigned a value but never used.","'handleComplete' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'detailAddr' is assigned a value but never used."]